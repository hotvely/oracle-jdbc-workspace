--도서 관리 프로그램을 만들기 위한 테이블 만들기


DROP TABLE TB_RENT;
DROP TABLE TB_MEMBER;
DROP TABLE TB_BOOK;
DROP TABLE TB_PUBLISHER;
/*
    01. 출판사들에 대한 데이터를 담기 위한 출판사 테이블
    1) 컬럼 : PUB_NO(출판사 번호) -- 기본 키
    PUB_NAME(출판사명) -- NOT NULL
    PHONE(출판사 전화번호)
    2) 3개 정도의 샘플 데이터 추가하기
*/

-----------------출판사 테이블 생성
CREATE TABLE TB_PUBLISHER
(
    PUB_NO NUMBER PRIMARY KEY,
    PUB_NAME VARCHAR2(20),
    PHONE VARCHAR2(13)
);

COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사 번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사 번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사명';
COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사 전화번호';

INSERT INTO TB_PUBLISHER VALUES(1, '인사이트', '02-1111-2222');
INSERT INTO TB_PUBLISHER VALUES(2, '제이펍', '02-3333-4444');
INSERT INTO TB_PUBLISHER VALUES(3, '한빛미디어', '02-5555-6666');
-----------------출판사 테이블 생성



-----------------도서 테이블 생성
CREATE TABLE TB_BOOK
(
    BK_NO NUMBER ,  
    BK_TITLE VARCHAR2(100) NOT NULL,
    BK_AUTHOR VARCHAR2(50) NOT NULL,
    BK_PRICE VARCHAR2(10),
    BK_PUB_NO NUMBER,
    
    CONSTRAINT TB_BOOK_BK_NO_PK PRIMARY KEY(BK_NO),
    CONSTRAINT TB_BOOK_PUB_NO_FK FOREIGN KEY (BK_PUB_NO) REFERENCES TB_PUBLISHER ON DELETE CASCADE
);

COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서번호';
COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서명';
COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '저자명';
COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '가격';
COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사 번호';

INSERT INTO TB_BOOK VALUES(1, '프로그래머 열정을 말하다', '채드 파울러' , 12600, 1);
INSERT INTO TB_BOOK VALUES(2, '1일 1로그 100일 완석 IT지식', '브라이언' , 18000, 1);
INSERT INTO TB_BOOK VALUES(3, '인스파이어드', '마티 케이건' , 21600, 2);
INSERT INTO TB_BOOK VALUES(4, '혼자 공부하는 얄팍한 코딩 지식', '고현민' , 16200, 3);
INSERT INTO TB_BOOK VALUES(5, '함께 자라기', '김창준' , 11700, 1);
-----------------도서 테이블 생성




-----------------회원데이터 테이블 생성
CREATE TABLE TB_MEMBER
(
    MEMBER_NO NUMBER,
    MEMBER_ID VARCHAR2(20) NOT NULL UNIQUE,
    MEMBER_PWD VARCHAR2(50) NOT NULL,
    MEMBER_NAME VARCHAR2(20) NOT NULL,
    GENDER VARCHAR2(10) CHECK(GENDER IN('M','F')),
    ADDRESS VARCHAR2(100), 
    PHONE VARCHAR2(20),
    STATUS VARCHAR2(2) DEFAULT 'N' CHECK(STATUS IN('Y','N')),
    ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
    CONSTRAINT TB_MEMBER_MEMBER_NO_PK PRIMARY KEY (MEMBER_NO)
);

DROP TABLE TB_MEMBER;

COMMENT ON COLUMN TB_MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS '아이디';
COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '회원명';
COMMENT ON COLUMN TB_MEMBER.GENDER IS '성별';
COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN TB_MEMBER.PHONE IS '연락처';
COMMENT ON COLUMN TB_MEMBER.STATUS IS '탈퇴 여부';
COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일';

INSERT INTO TB_MEMBER VALUES(1,'USER1','1234','유병재','M','서울시 강남구','010-1111-2222','N', DEFAULT);
INSERT INTO TB_MEMBER VALUES(2,'USER2','1234','김동현','M','서울시 강남구','010-3333-4444','N', DEFAULT);
INSERT INTO TB_MEMBER VALUES(3,'USER3','1234','강호동','F','서울시 강남구','010-5555-6666','N', DEFAULT);
-----------------회원데이터 테이블 생성



-----------------회원데이터 테이블 생성
CREATE TABLE TB_RENT
(
RENT_NO NUMBER,
RENT_MEM_NO NUMBER ,
RENT_BOOK_NO NUMBER ,
RENT_DATE DATE DEFAULT SYSDATE,

CONSTRAINT TB_RENT_RENT_NO_PK PRIMARY KEY(RENT_NO),
CONSTRAINT TB_RENT_RENT_MEM_NO_FK FOREIGN KEY (RENT_MEM_NO) REFERENCES TB_MEMBER ON DELETE CASCADE,
CONSTRAINT TB_RENT_RENT_MEM_NO_FK FOREIGN KEY (RENT_BOOK_NO) REFERENCES TB_BOOK ON DELETE CASCADE
);

COMMENT ON COLUMN TB_RENT.RENT_NO IS '대여번호';
COMMENT ON COLUMN TB_RENT.RENT_MEM_NO IS '대여 회원번호';
COMMENT ON COLUMN TB_RENT.RENT_BOOK_NO IS '대여 도서번호';
COMMENT ON COLUMN TB_RENT.RENT_DATE IS '대여일';

INSERT INTO TB_RENT VALUES(1,1,2,DEFAULT);
INSERT INTO TB_RENT VALUES(2,1,3,DEFAULT);
INSERT INTO TB_RENT VALUES(3,2,1,DEFAULT);
INSERT INTO TB_RENT VALUES(4,2,2,DEFAULT);
INSERT INTO TB_RENT VALUES(5,1,5,DEFAULT);
-----------------회원데이터 테이블 생성


--2번 도서를 대여한 회원의 이름, 아이디, 대여일, 반납 예정일(대여일 + 7일)을 조회하시오
SELECT TB_MEMBER.MEMBER_NAME, TB_MEMBER.MEMBER_ID, TB_RENT.RENT_DATE, TB_RENT.RENT_DATE + 7
FROM TB_RENT
JOIN TB_MEMBER ON TB_MEMBER.MEMBER_NO = TB_RENT.RENT_MEM_NO
WHERE RENT_BOOK_NO = 2;

--  회원번호가 1번인 회원이 대여한 도서들의 도서명, 출판사명, 대여일, 반납예정일을 조회하시오
SELECT BK_TITLE, PUB_NAME, RENT_DATE, RENT_DATE + 7
FROM TB_BOOK TB
JOIN TB_RENT TR ON TR.RENT_BOOK_NO = TB.BK_NO
JOIN TB_MEMBER TM ON TR.RENT_MEM_NO = TM.MEMBER_NO
JOIN TB_PUBLISHER TP ON TP.PUB_NO = TB.BK_PUB_NO
WHERE RENT_MEM_NO = 1;





























